# XONSH WEBCONFIG START
# XONSH WEBCONFIG END

# -- modules

import os
import shlex
from argparse import ArgumentParser


from pygments.style import Style
from pygments.token import (Comment, Error, Generic, Name, Number, Operator, String, Text, Whitespace, Keyword, Literal, Other, Punctuation)

from xonsh.built_ins import XSH
from xonsh.pyghooks import register_custom_pygments_style
from xonsh.ansi_colors import register_custom_ansi_style

# -- XONTRIB

XSH.builtins.execx('xontrib load z argcomplete coreutils fzf-widgets jedi prompt_ret_code vox up')

# -- ENV

XSH.env['DEVICE_SSH_PORT'] = 2222
# XSH.env['DEVICE_SSH_PORT'] = 4444
XSH.env['PROMPT'] = '{env_name}{BOLD_GREEN}{user}@{hostname}{BOLD_BLUE} {cwd}{branch_color}{curr_branch: {}}{RESET} {BOLD_BLUE}{prompt_end}{RESET} '
XSH.env['PATH'] = ['/usr/local/opt/openjdk/bin',
 '/usr/local/opt/openssl@1.1/bin',
 '/Library/Frameworks/Python.framework/Versions/3.10/bin',
 '/usr/local/bin',
 '/usr/sbin',
 '/usr/bin',
 '/opt/bin',
 '/sbin',
 '/bin',
 '/Library/Apple/usr/bin',
 '/Applications/Wireshark.app/Contents/MacOS',
 '/usr/local/opt/fzf/bin',
 '/Users/z/Library/Python/3.9/bin',
 '/Users/z/Library/Python/3.8/bin',
 '/Users/z/Library/Python/3.10/bin']
XSH.env['PKG_CONFIG_PATH'] = '/usr/local/opt/openssl@1.1/lib/pkgconfig:/usr/local/opt/curl/lib/pkgconfig:/usr/local/opt/openssl/lib/pkgconfig:/usr/local/opt/readline/lib/pkgconfig'
XSH.env['LDFLAGS'] = '-L/usr/local/opt/openssl@1.1/lib'
XSH.env['CPPFLAGS'] = "-I/usr/local/opt/openssl@1.1/include"


XSH.env['fzf_history_binding'] = "c-r"  # Ctrl+R
XSH.env['fzf_ssh_binding'] = "c-s"      # Ctrl+S
XSH.env['fzf_file_binding'] = "c-t"      # Ctrl+T
XSH.env['fzf_dir_binding'] = "c-g"      # Ctrl+G


# -- STYLE

ANSI_STYLE = {
    'BLACK': '#282828', 'BLUE': '#458588', 'CYAN': '#689D6A', 'DEFAULT': '#D4EB98', 'GREEN': '#98971A', 'ORANGE': '#D65D0E', 'PURPLE': '#b16286', 'RED': '#CC441D', 'WHITE': '#EBDBB2', 'YELLOW': '#D79921',
    'INTENSE_BLACK': '#665C54', 'INTENSE_BLUE': '#83A598', 'INTENSE_CYAN': '#8EC07C', 'INTENSE_GREEN': '#b8bb26', 'INTENSE_ORANGE': '#fe8019', 'INTENSE_PURPLE': '#D3869B', 'INTENSE_RED': '#fb4934', 'INTENSE_WHITE': '#FBF1F7', 'INTENSE_YELLOW': '#FA8D2F',
}

BG_COLOR = ANSI_STYLE['BLACK']
PG_STYLE = {
    Comment: f'{ANSI_STYLE["INTENSE_CYAN"]} italic',

    Error: f'{ANSI_STYLE["RED"]} bold',

    Generic: f'{ANSI_STYLE["DEFAULT"]}',
    Generic.Deleted: f'{ANSI_STYLE["INTENSE_BLACK"]}',
    Generic.Emph: f'{ANSI_STYLE["WHITE"]}',
    Generic.Error: f'{ANSI_STYLE["RED"]} bold',
    Generic.Heading: f'{ANSI_STYLE["INTENSE_WHITE"]}',
    Generic.Inserted: f'{ANSI_STYLE["INTENSE_WHITE"]}',
    Generic.Output: '#44475A',
    Generic.Prompt: f'{ANSI_STYLE["WHITE"]}',
    Generic.Strong: f'{ANSI_STYLE["WHITE"]} bold',
    Generic.Subheading: f'{ANSI_STYLE["INTENSE_WHITE"]}',
    Generic.Traceback: f'{ANSI_STYLE["ORANGE"]}',

    Keyword: f'{ANSI_STYLE["INTENSE_RED"]}',
    Keyword.Content: f'{ANSI_STYLE["INTENSE_RED"]}',
    Keyword.Declaration: f'{ANSI_STYLE["INTENSE_RED"]}',
    Keyword.Namespace: f'{ANSI_STYLE["RED"]} bold',
    Keyword.Pseudo: f'{ANSI_STYLE["INTENSE_RED"]}',
    Keyword.Reserved: f'{ANSI_STYLE["INTENSE_CYAN"]}',
    Keyword.Type: f'{ANSI_STYLE["YELLOW"]}',

    Literal: f'{ANSI_STYLE["INTENSE_WHITE"]}',
    Literal.Date: f'{ANSI_STYLE["INTENSE_WHITE"]}',

    Name: f'{ANSI_STYLE["INTENSE_BLUE"]}',
    Name.Attribute: f'{ANSI_STYLE["INTENSE_CYAN"]}',
    Name.Builtin: f'{ANSI_STYLE["INTENSE_YELLOW"]} bold',
    Name.Builtin.Pseudo: f'{ANSI_STYLE["INTENSE_ORANGE"]}',
    Name.Class: f'{ANSI_STYLE["INTENSE_ORANGE"]} underline',
    Name.Constant: f'{ANSI_STYLE["PURPLE"]}',
    Name.Decorator: f'{ANSI_STYLE["INTENSE_RED"]}',
    Name.Entity: f'{ANSI_STYLE["INTENSE_WHITE"]}',
    Name.Exception: f'{ANSI_STYLE["INTENSE_PURPLE"]}',
    Name.Function: f'{ANSI_STYLE["INTENSE_CYAN"]} bold',
    Name.Label: f'{ANSI_STYLE["INTENSE_RED"]}',
    Name.Namespace: f'{ANSI_STYLE["INTENSE_GREEN"]}',
    Name.Other: f'{ANSI_STYLE["WHITE"]}',
    Name.Variable: f'{ANSI_STYLE["WHITE"]}',
    Name.Variable.Class: f'{ANSI_STYLE["BLUE"]} italic',
    Name.Variable.Global: f'{ANSI_STYLE["BLUE"]} italic',
    Name.Variable.Instance: f'{ANSI_STYLE["BLUE"]} italic',

    Number: f'{ANSI_STYLE["INTENSE_PURPLE"]}',

    Operator: f'{ANSI_STYLE["WHITE"]}',
    Operator.Word: f'{ANSI_STYLE["RED"]}',

    Other: ANSI_STYLE['WHITE'],
    Punctuation: ANSI_STYLE['WHITE'],

    String: f'{ANSI_STYLE["INTENSE_GREEN"]}',

    Text: f'{ANSI_STYLE["WHITE"]}',

    Whitespace: f'{ANSI_STYLE["WHITE"]}',
}

register_custom_pygments_style('doronz', PG_STYLE, background_color=BG_COLOR)
register_custom_ansi_style('doronz', ANSI_STYLE)

XSH.env['XONSH_COLOR_STYLE'] = 'doronz'


# -- ALIAS

def _get_file(args):
    scp -i "~/.ssh/id_rsa" -r -P $DEVICE_SSH_PORT root@localhost:@(args[0]) @(args[1])


def _put_file(args):
    scp -i "~/.ssh/id_rsa" -r -P $DEVICE_SSH_PORT @(args[0]) root@localhost:@(args[1])


def _localdevice(args):
    ssh -p $DEVICE_SSH_PORT root@localhost -i ~/.ssh/id_rsa


def _ggpush(args):
    XSH.builtins.execx(f'git push origin {XSH.env["PROMPT_FIELDS"]["curr_branch"]()} {shlex.join(args)}')


def _subl(args):
    if 0 != os.system(f'open -b com.sublimetext.4 "{args[0]}"'):
        os.system(f'open -b com.sublimetext.3 "{args[0]}"')


def _rcpull(args):
    parser = ArgumentParser(description='pull latest .xonshrc')
    args = parser.parse_args(args)

    cd ~/dev/dotfiles
    ggpull
    cp .xonshrc ~/
    cd -


def _rcpush(args):
    parser = ArgumentParser(description='push latest .xonshrc')
    args = parser.parse_args(args)

    cd ~/dev/dotfiles
    cp ~/.xonshrc .
    ga .xonshrc
    git commit -m 'update .xonshrc'
    ggpush
    cd -

# -- xonsh

aliases['reload'] = 'source ~/.xonshrc'
aliases['rc'] = 'subl ~/.xonshrc'
aliases['rcpull'] = _rcpull
aliases['rcpush'] = _rcpush

# -- apps

aliases['subl'] = _subl
aliases['code'] = 'open -b com.microsoft.VSCode'
aliases['010'] = 'open -b com.SweetScape.010Editor'
aliases['charm'] = 'open -b com.jetbrains.pycharm.ce'
aliases['ida'] = 'open -b com.hexrays.ida64'
aliases['sqlitebrwoser'] = 'open -a sqlitebrowser'

# -- checkra1n

aliases['get_file'] = _get_file
aliases['put_file'] = _put_file
aliases['localdevice'] = _localdevice

# -- git

aliases['ga'] = 'git add'
aliases['ggpush'] = _ggpush
aliases['gco'] = 'git checkout'
aliases['ggpull'] = 'git pull'
aliases['glog'] = 'git log --oneline --decorate --graph'
aliases['gd'] = 'git diff'
aliases['gst'] = 'git status'
aliases['gcl'] = 'git clone --recurse-submodules'

# -- shell

aliases['l'] = 'ls -lah'
aliases['la'] = 'ls -lAh'
aliases['ll'] = 'ls -lh'
aliases['ls'] = 'ls -G'
aliases['lsa'] = 'ls -lah'

# -- tools

aliases['pymobiledevice3'] = 'python3 -m pymobiledevice3'
aliases['rpcclient'] = 'python3 -m rpcclient'

# -- fixes

aliases['uptime'] = '/usr/bin/uptime'

